@model IEnumerable<Tickets.Models.Ticket>
@{
    ViewData["Title"] = "User Dashboard";
    Layout = "~/Views/Shared/MySidebarU.cshtml";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Dashboard Sidebar</title>
    @* <link rel="stylesheet" href="~/css/dashboard.css" /> *@
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/ag-grid-community/styles/ag-grid.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/ag-grid-community/styles/ag-theme-alpine.css">
    <script src="https://cdn.jsdelivr.net/npm/ag-grid-community/dist/ag-grid-community.noStyle.js"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

    <style>
        /* General Styles */
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 0;
            background-color: #f4f4f4;
            display: flex;
            height: 100vh;
            overflow: hidden;
        }

        .container {
            display: flex;
            width: 100%;
            height: 100%;
        }

        


        /* General styles for charts and tables */
        .charts-container {
            display: flex;
            flex-wrap: wrap;
            gap: 20px; /* Spacing between chart containers */
            padding: 20px; /* Optional padding around the container */
            overflow-x: auto; /* Enable horizontal scroll if necessary */
            box-sizing: border-box;
        }

        .chart-container {
            position: relative;
            flex: 1 1 calc(50% - 20px); /* Adjusts width based on available space */
            min-width: 300px; /* Ensures a minimum width for smaller screens */
            max-width: 100%;
            margin: 10px 0; /* Vertical margin for spacing */
            box-sizing: border-box; /* Ensures padding and border are included in width/height */
        }

        #priorityPieChart, #statusChart, #ticketCreated, #statusChartD {
            background-color: #f9f9f9;
            border: 1px solid #ddd;
            width: 100%;
            height: 300px; /* Adjust height as needed */
            box-sizing: border-box; /* Ensures padding and border are included in width/height */
        }

        canvas {
            width: 100% !important; /* Ensure canvas scales with container width */
            height: auto !important; /* Maintain aspect ratio */
            max-height: 300px; /* Set a maximum height to prevent overflow */
        }

        /* Additional styling to ensure text is below the chart */
        .chart-container h3 {
            margin: 10px 0; /* Margin to space text from the chart */
            text-align: center; /* Center the text */
        }

        .chart-container {
            display: flex;
            flex-direction: column;
            align-items: center; /* Center align the content */
        }

        #timePeriod {
            position: absolute;
            top: 21px; /* Chart ke upar ke edge se distance */
            right: 20px; /* Chart ke right edge se distance */
            z-index: 15; /* Ensure ki select box chart ke upar ho */
            background-color: rgba(255, 255, 255, 0.8); /* Background color to make it visible */
            padding: 5px;
            border-radius: 5px;
            font-size: 14px;
        }
        /* Custom Styles */
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 0;
            background-color: #f4f4f4;
            display: flex;
            height: 100vh;
            overflow: hidden;
        }

        .container {
            display: flex;
            width: 100%;
            height: 100%;
        }

        .sidebar {
            background-color: #444;
            color: white;
            padding: 20px;
            width: 200px;
            height: 100%;
            overflow-y: auto;
            transition: width 0.3s;
            display: flex;
            flex-direction: column;
            position: relative;
        }

            .sidebar.collapsed {
                width: 60px;
            }

        .content {
            flex: 1;
            padding: 1px;
            background-color: #fff;
            overflow-y: auto;
        }

        .header {
            background-color: #333;
            color: white;
            padding: 10px 20px;
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-left: 0px;
        }

            .header .home-button {
                background-color: #666;
                color: white;
                padding: 8px 15px;
                border: none;
                border-radius: 5px;
                cursor: pointer;
                text-decoration: none;
                font-size: 16px;
            }

                .header .home-button:hover {
                    background-color: #888;
                }

        h2.mb-4 {
            color: #add8e6;
            text-align: center;
        }

        .ag-theme-alpine {
            height: 400px;
            width: 100%;
        }
    </style>
</head>
<body>
    <header class="header">
        <button class="home-button">Home</a>
    </header>
<div class="container">
   
    
    <main class="content">
        
            <h2>Ticket List</h2>
        

        <div id="ticketGrid" class="ag-theme-alpine"></div>
    </main>

    <script>
        // Initialize AG Grid
        const columnDefs = [
            // { headerName: "Ticket No", field: "ticketNo", sortable: true, filter: true },
                { headerName: "Id", field: "id", sortable: true, filter: true, pinned:'left',width:80 },
            { headerName: "Subject", field: "subject", sortable: true, filter: true,width:80 },
                { headerName: "Body", field: "ticketBody", sortable: true, filter: true, width: 80, autoHeight: true, wrapText: true },
            { headerName: "Created At", field: "createdAt", sortable: true, filter: 'agDateColumnFilter' },
            { headerName: "Priority", field: "priority", sortable: true, filter: true },
            { headerName: "Status", field: "status", sortable: true, filter: true },
                { headerName: "AssignedByEmail", field: "assignedByEmail", sortable: true, filter: true },
            {
                headerName: "Actions",
                    
                cellRenderer: function(params) {
                    return `<a href="/Ticket/Update/${params.data.id}" class="btn btn-warning btn-sm">Update</a>`;
                },
                
            }
        ];

        const rowData = @Html.Raw(Json.Serialize(Model.Select(ticket => new {
            id = ticket.Id,
            // ticketNo = ticket.TicketNo,
            subject = ticket.Subject,
            ticketBody = ticket.TicketBody,
            CreatedAt = ticket.CreatedAt.ToString("yyyy-MM-dd"),
            priority = ticket.Priority,
            status = ticket.Status.ToString(),
            assignedByEmail=ticket.AssignedByEmail
        })));

        const gridOptions = {
            columnDefs: columnDefs,
            rowData: rowData,
            defaultColDef: {
                sortable: true,
                filter: true
            }
        };

        const eGridDiv = document.querySelector('#ticketGrid');
        new agGrid.Grid(eGridDiv, gridOptions);

        
    </script>
       
</body>
</html>
